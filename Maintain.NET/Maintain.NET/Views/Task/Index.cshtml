@model IEnumerable<Maintain.NET.Models.UserMaintenanceTask>
@using Maintain.NET.Models.Interfaces
@using Maintain.NET.Models
@inject ITaskManager TaskManagementService
@inject SignInManager<ApplicationUser> signInManager

<header id="main-header">
@if (signInManager.IsSignedIn(User))
{
    <div id="greeting">
        <div>
            <p>
                <i>Hey, @User.Claims.First(c => c.Type == "FullName").Value </i>
                    <a href="../Account/Logout" id="logout">Log out </a> </p>

        </div>
    </div>
}

    <h3 id="manage-title">Manage Your Tasks</h3>
</header>

@{
    var tasks = await TaskManagementService.GetAllTasks();

    Layout = "_Layout";

    TimeConverter timeConverter = new TimeConverter();

}

<div class="text-container-manage">

    @foreach (var usertask in Model)

    {
        <p>Due Date: @timeConverter.UnixToDate(usertask.NextComplete)</p>
        <p><strong>@usertask.MaintenanceTask.Name</strong></p>
        <a asp-action="DeleteUserTask" asp-route-id="@usertask.ID" id="a-button">Delete</a>
        <a asp-action="Manage" asp-route-id="@usertask.ID" id="a-button">Complete Task</a>

    }

</div>

<p>
    <a asp-action="CreateUserTask" id="add-button">Add New Task</a>
</p>


@*<form asp-action="CreateUserTask" method="post">
        <select name="tasks">
            @foreach (var i in tasks)
            {
                <option>@i.Name</option>
            }
        </select>
        <br><br>
        <input type="submit">
    </form>*@